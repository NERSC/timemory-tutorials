stephey@cori06:/global/cscratch1/sd/stephey/timemory-tutorials/tutorial-day-1/python-api-and-tools/solutions> python example-trace-context.py 
Running fibonacci...
Running inefficient...
Answer = 509443184046766.0
[wall]|0> Outputting 'timemory-example-trace-context-output/wall.flamegraph.json'...
[wall]|0> Outputting 'timemory-example-trace-context-output/wall.json'...
[wall]|0> Outputting 'timemory-example-trace-context-output/wall.tree.json'...
[wall]|0> Outputting 'timemory-example-trace-context-output/wall.txt'...

|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|                                                                                           REAL-CLOCK TIMER (I.E. WALL-CLOCK TIMER)                                                                                           |
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|                                                        LABEL                                                         | COUNT  | DEPTH  | METRIC | UNITS  |  SUM   | MEAN   |    MIN      |    MAX      |   STDDEV   | % SELF |
|----------------------------------------------------------------------------------------------------------------------|--------|--------|--------|--------|--------|--------|-------------|-------------|------------|--------|
| >>> def fib(n):                                                                    [fib/example-trace-context.py:05] |  10945 |      0 | wall   | sec    |  0.740 |  0.000 | 1651960.688 | 1651960.688 | 738820.542 |  100.0 |
| >>>     with trace(["wall_clock"], key=f"fib({n})"):                               [fib/example-trace-context.py:06] |  21890 |      0 | wall   | sec    |  0.248 |  0.000 |       0.000 |       0.000 |      0.000 |  100.0 |
| >>>         return n if n < 2 else (fib(n - 1) + fib(n - 2))                       [fib/example-trace-context.py:07] |  21890 |      0 | wall   | sec    |  0.272 |  0.000 |       0.000 |       0.000 |      0.000 |  100.0 |
| >>> def _sum(a, axis=None, dtype=None, out=None, keepdims=False,                              [_sum/_methods.py:036] |      1 |      0 | wall   | sec    |  0.023 |  0.023 |       0.023 |       0.023 |      0.000 |  100.0 |
| >>>          initial=_NoValue, where=True):                                                   [_sum/_methods.py:037] |        |      0 |        |        |        |        |             |             |            |        |
| >>>     return umr_sum(a, axis, dtype, out, keepdims, initial, where)                         [_sum/_methods.py:038] |      1 |      0 | wall   | sec    |  0.023 |  0.023 |       0.023 |       0.023 |      0.000 |  100.0 |
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

